@inject ToDo_List_server.Data.Repository.IRepository repository;

@page "/todo"
@using System.Collections
<div class="container-fluid">
    <div class="row">
        <div class="col">

            <h2 class="text-center">Список дел</h2>
            <h6 class="text-center" style="color: #999999">Незавершенных: @todos.Count(item => !item.IsDone)</h6>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Название</th>
                        <th scope="col">Отметка</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (TodoItem item in todos.OrderBy(t => t.IsDone))
                    {
                        <tr>
                            <td>
                                    <div style="@(item.IsDone ? "color: green; text-decoration: line-through;": "color: red")">
                                    @item.Title
                                </div>
                            </td>
                            <td>
                                @if (!item.IsDone){
                                            <input type="checkbox" @key="@item.Id" value="@item.IsDone" @onchange="(() => StatusChanger(item))"/>
                                }
                                else
                                {
                                            <input type="checkbox" checked @key="@item.Id" value="@item.IsDone" @onchange="(() => StatusChanger(item))"/>
                                }
                            </td>
                            <td>
                                 <button class="btn btn-danger" @onclick="(() => DeleteTodo(item.Id))">Удалить</button>
                            </td>
                        </tr>
                    }
                </tbody>  
            </table>

            <form @onsubmit=Enter>
                <div class="row">
                    <div class="col">
                        <input class="form-control" placeholder="Место для ввода задачи" @bind="newTodo"/>
                    </div>
                    <div class="col">
                        <button class="btn btn-success">Добавить задачу</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    private IEnumerable<TodoItem> todos = new List<TodoItem>();

    protected override void OnInitialized()
    {
        todos = repository.GetAllItems();
    }

    private string newTodo;

    private void DeleteTodo(int id)
    {
        repository.DeleteItem(id);
    }

    private void Enter()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            repository.AddTodo(newTodo);
            newTodo = string.Empty;
        }
    }

    private void StatusChanger(TodoItem changedItem)
    {
        changedItem.IsDone = !changedItem.IsDone;
        repository.ValueChanged(changedItem);
    }
}
